<UserControl x:Class="ToyBoxx.Controls.ControllerPanelControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:ToyBoxx.ViewModels"
             xmlns:local="clr-namespace:ToyBoxx"
             xmlns:controls="clr-namespace:ToyBoxx.Controls"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance vm:RootViewModel, IsDesignTimeCreatable=True}">
    <Grid Name="Controls" Visibility="Visible" Height="120" Background="Black" Opacity="0.8">
        <Grid VerticalAlignment="Bottom">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"></RowDefinition>
                <RowDefinition Height="70"></RowDefinition>
            </Grid.RowDefinitions>

            <Canvas Name="PreviewImageCanvas"
                    Visibility="Collapsed">
                <Border Name="PreviewImageArea"
                        Width="160"
                        Height="130"
                        Background="White"
                        Opacity="0.8"
                        Canvas.Left="0"
                        Canvas.Top="0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Image
                            Name="Thumbnail"
                            Grid.Row="0"
                            Stretch="Uniform"
                            Source="{Binding Controller.Thumbnail}"/>
                        <TextBlock
                            Name="HoverPosition"
                            Grid.Row="1"
                            Foreground="Black"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            Margin="0,2"/>
                    </Grid>
                </Border>
            </Canvas>

            <controls:PositionSlider x:Name="PositionSlider"
                                     Grid.Row="0"
                                     Margin="10,0"
                                     Cursor="Hand"
                                     Visibility="Visible"
                                     IsSnapToTickEnabled="False"
                                     LoopStart="{Binding Controller.SegmentLoopFrom, Converter={StaticResource NullableTimeSpanToSecondsConverter}}"
                                     LoopEnd="{Binding Controller.SegmentLoopTo, Converter={StaticResource NullableTimeSpanToSecondsConverter}}"
                                     Style="{StaticResource {x:Type Slider}}"
                                     IsEnabled="{Binding MediaElement.IsOpen}"
                                     SmallChange="{Binding MediaElement.PositionStep, Converter={StaticResource TimeSpanToSecondsConverter}}"
                                     LargeChange="{Binding MediaElement.PositionStep, Converter={StaticResource TimeSpanToSecondsConverter}}"
                                     Minimum="{Binding MediaElement.PlaybackStartTime, Converter={StaticResource TimeSpanToSecondsConverter}}"
                                     Maximum="{Binding MediaElement.PlaybackEndTime, Converter={StaticResource TimeSpanToSecondsConverter}}" 
                                     Value="{Binding MediaElement.Position, Converter={StaticResource TimeSpanToSecondsConverter}}"
                                     MouseMove="PositionSlider_MouseMove"
                                     MouseEnter="PositionSlider_MouseEnter"
                                     MouseLeave="PositionSlider_MouseLeave"
                                     />

            <Grid Name="ControlsPanel" Grid.Row="1" Margin="20,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>

                <DockPanel Name="LeftControls" HorizontalAlignment="Left" Grid.Column="0">
                    <ui:Button Margin="5,0"
                               Visibility="{Binding Controller.PlayButtonVisibility}"
                               IsEnabled="{Binding Controller.IsPlayButtonEnabled}"
                               Command="{Binding Commands.Play}"
                               ToolTip="Play">
                        <ui:SymbolIcon Symbol="Play48" Filled="True" Foreground="White"/>
                    </ui:Button>
                    <ui:Button Margin="5,0"
                               Visibility="{Binding Controller.PauseButtonVisibility}"
                               IsEnabled="{Binding Controller.IsPauseButtonEnabled}"
                               Command="{Binding Commands.Pause}"
                               ToolTip="Pause">
                        <ui:SymbolIcon Symbol="Pause12" Filled="True" Foreground="White"/>
                    </ui:Button>
                    <ui:Button Margin="5,0"
                               IsEnabled="{Binding Controller.IsStopButtonEnabled}"
                               Command="{Binding Commands.Stop}"
                               ToolTip="Stop">
                        <ui:SymbolIcon Symbol="Stop24" Filled="True" Foreground="White"/>
                    </ui:Button>

                    <!-- StepForwardCommand is executed in code-behind to bypass WPF Click event limitations for rapid clicks -->
                    <ui:Button Margin="5,0"
                               Name="StepForwardButton"
                               IsEnabled="{Binding Controller.IsStepForwardEnabled}"
                               ToolTip="Step forward">
                        <ui:SymbolIcon Symbol="ArrowStepInRight12" Filled="True" Foreground="White"/>
                    </ui:Button>

                    <ToggleButton Name="PlaybackSpeedButton"
                                  IsEnabled="{Binding Controller.IsPlaybackSpeedButtonEnabled}"
                                  Margin="5,0"
                                  Width="60"
                                  ToolTip="Change playback speed">
                        <TextBlock Text="{Binding MediaElement.SpeedRatio, Converter={StaticResource SpeedRatioConverter}}" />
                    </ToggleButton>
                    <Popup Name="PlaybackSpeedPopup"
                           IsOpen="{Binding IsChecked, ElementName=PlaybackSpeedButton, Mode=TwoWay}"
                           StaysOpen="False"
                           PopupAnimation="Fade"
                           Placement="Top"
                           PlacementTarget="{Binding ElementName=PlaybackSpeedButton}"
                           VerticalOffset="-10"
                           AllowsTransparency="True">
                        <StackPanel Width="80" Background="Black" Opacity="0.8">
                            <ui:Button HorizontalAlignment="Stretch"
                                       Command="{Binding Commands.ChangeSpeedRatio}"
                                       CommandParameter="0.25"
                                       Click="PlaybackSpeedButton_Click">
                                x 0.25
                            </ui:Button>
                            <ui:Button HorizontalAlignment="Stretch"
                                       Command="{Binding Commands.ChangeSpeedRatio}"
                                       CommandParameter="0.5"
                                       Click="PlaybackSpeedButton_Click">
                                x 0.5
                            </ui:Button>
                            <ui:Button HorizontalAlignment="Stretch"
                                       Command="{Binding Commands.ChangeSpeedRatio}"
                                       CommandParameter="0.75"
                                       Click="PlaybackSpeedButton_Click">
                                x 0.75
                            </ui:Button>
                            <ui:Button HorizontalAlignment="Stretch"
                                       Command="{Binding Commands.ChangeSpeedRatio}"
                                       CommandParameter="1.0"
                                       Click="PlaybackSpeedButton_Click">
                                x 1
                            </ui:Button>
                            <ui:Button HorizontalAlignment="Stretch"
                                       Command="{Binding Commands.ChangeSpeedRatio}"
                                       CommandParameter="1.25"
                                       Click="PlaybackSpeedButton_Click">
                                x 1.25
                            </ui:Button>
                            <ui:Button HorizontalAlignment="Stretch"
                                       Command="{Binding Commands.ChangeSpeedRatio}"
                                       CommandParameter="1.5"
                                       Click="PlaybackSpeedButton_Click">
                                x 1.5
                            </ui:Button>
                            <ui:Button HorizontalAlignment="Stretch"
                                       Command="{Binding Commands.ChangeSpeedRatio}"
                                       CommandParameter="2.0"
                                       Click="PlaybackSpeedButton_Click">
                                x 2
                            </ui:Button>
                            <ui:Button HorizontalAlignment="Stretch"
                                       Command="{Binding Commands.ChangeSpeedRatio}"
                                       CommandParameter="3.0"
                                       Click="PlaybackSpeedButton_Click">
                                x 3
                            </ui:Button>
                        </StackPanel>
                    </Popup>


                    <ToggleButton Margin="5,0"
                                  Name="MuteUnmuteButton" IsChecked="{Binding MediaElement.IsMuted, Mode=TwoWay}"
                                  ToolTip="Mute">
                        <ui:SymbolIcon Symbol="SpeakerMute16" Filled="True" Foreground="White"/>
                    </ToggleButton>
                    <controls:HtmlLikeSlider Margin="5,0"
                                             Width="100"
                                             VerticalAlignment="Center"
                                             IsEnabled="{Binding MediaElement.IsMuted, Converter={StaticResource InverseBooleanConverter}}"
                                             Minimum="0.0"
                                             Maximum="1.0"
                                             Style="{StaticResource {x:Type Slider}}"
                                             Value="{Binding MediaElement.Volume}" />

                </DockPanel>

                <DockPanel Name="RightControls" HorizontalAlignment="Right" Grid.Column="1">
                    <TextBlock Margin="5,0" Foreground="White" FontSize="14" VerticalAlignment="Center" Text="{Binding MediaElement.Position, StringFormat={}{0:hh\\:mm\\:ss}}"/>
                    <TextBlock Foreground="White" FontSize="14" VerticalAlignment="Center">/</TextBlock>
                    <TextBlock Margin="5,0" Foreground="White" FontSize="14" VerticalAlignment="Center" Text="{Binding MediaElement.NaturalDuration, StringFormat={}{0:hh\\:mm\\:ss}}"/>
                    <ToggleButton Margin="5,0" IsChecked="{Binding Controller.IsLoopingMediaEnabled, Mode=TwoWay}" ToolTip="Enable Looping">
                        <ui:SymbolIcon Symbol="ArrowRepeatAll16" Foreground="White"/>
                    </ToggleButton>

                    <ToggleButton Margin="5,0"
                                  PreviewMouseLeftButtonDown="ToggleButton_PreviewMouseLeftButtonDown"
                                  IsChecked="{Binding Controller.IsSegmentLoopEnabled, Mode=OneWay}"
                                  Command="{Binding Commands.SetSegmentLoop}"
                                  ToolTip="Loop selected range">
                        <ui:SymbolIcon Symbol="ArrowReset20" Filled="True" Foreground="White"/>
                    </ToggleButton>

                    <ui:Button Margin="5,0"
                               Command="{Binding ToggleFullScreen}"
                               ToolTip="Toggle full screen">
                        <ui:SymbolIcon Symbol="FullScreenMaximize16" Foreground="White"/>
                    </ui:Button>
                </DockPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
