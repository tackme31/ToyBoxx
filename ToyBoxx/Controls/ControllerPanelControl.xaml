<UserControl x:Class="ToyBoxx.Controls.ControllerPanelControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:ToyBoxx.ViewModels"
             xmlns:local="clr-namespace:ToyBoxx"
             xmlns:controls="clr-namespace:ToyBoxx.Controls"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance vm:RootViewModel, IsDesignTimeCreatable=True}">
    <Grid Name="Controls" Visibility="Visible" Height="120" Background="Black" Opacity="0.8">
        <Grid VerticalAlignment="Bottom">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"></RowDefinition>
                <RowDefinition Height="70"></RowDefinition>
            </Grid.RowDefinitions>

            <controls:HtmlLikeSlider x:Name="PositionSlider"
                                     Grid.Row="0"
                                     Margin="10,0"
                                     Cursor="Hand"
                                     Visibility="Visible"
                                     IsSnapToTickEnabled="False"
                                     Style="{StaticResource {x:Type Slider}}"
                                     IsEnabled="{Binding MediaElement.IsOpen}"
                                     SmallChange="{Binding MediaElement.PositionStep, Converter={StaticResource TimeSpanToSecondsConverter}}"
                                     LargeChange="{Binding MediaElement.PositionStep, Converter={StaticResource TimeSpanToSecondsConverter}}"
                                     Minimum="{Binding MediaElement.PlaybackStartTime, Converter={StaticResource TimeSpanToSecondsConverter}}"
                                     Maximum="{Binding MediaElement.PlaybackEndTime, Converter={StaticResource TimeSpanToSecondsConverter}}" 
                                     Value="{Binding MediaElement.Position, Converter={StaticResource TimeSpanToSecondsConverter}}"
                                     />

            <Grid Name="ControlsPanel" Grid.Row="1" Margin="20,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>

                <DockPanel Name="LeftControls" HorizontalAlignment="Left" Grid.Column="0">
                    <ToggleButton Name="MuteUnmuteButton" IsChecked="{Binding MediaElement.IsMuted, Mode=TwoWay}">
                        <ui:SymbolIcon Symbol="SpeakerMute16" Filled="True" Foreground="White"/>
                    </ToggleButton>
                    <controls:HtmlLikeSlider Margin="5,0"
                            Width="100"
                            VerticalAlignment="Center"
                            IsEnabled="{Binding MediaElement.IsMuted, Converter={StaticResource InverseBooleanConverter}}"
                            Minimum="0.0"
                            Maximum="1.0"
                            Style="{StaticResource {x:Type Slider}}"
                            Value="{Binding MediaElement.Volume}" />

                    <ui:Button Command="{Binding Commands.SetSegmentLoop}">
                        <ui:SymbolIcon Symbol="ArrowReset20" Filled="True" Foreground="White"/>
                    </ui:Button>

                    <Border BorderBrush="Gray" BorderThickness="1" Height="30">
                        <Grid VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="60" />
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="60" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Foreground="White" FontSize="14" HorizontalAlignment="Right" Text="{Binding Controller.SegmentLoopFrom, StringFormat={}{0:hh\\:mm\\:ss}}"/>
                            <TextBlock Grid.Column="1" Foreground="White" FontSize="14"  HorizontalAlignment="Center">-</TextBlock>
                            <TextBlock Grid.Column="2" Foreground="White" FontSize="14"  HorizontalAlignment="Left" Text="{Binding Controller.SegmentLoopTo, StringFormat={}{0:hh\\:mm\\:ss}}"/>
                        </Grid>
                    </Border>

                </DockPanel>

                <DockPanel Name="CenterControls" HorizontalAlignment="Center" Grid.Column="1">
                    <ui:Button Visibility="{Binding Controller.PlayButtonVisibility}" Command="{Binding Commands.Play}">
                        <ui:SymbolIcon Symbol="Play48" Filled="True" Foreground="White"/>
                    </ui:Button>
                    <ui:Button Visibility="{Binding Controller.PauseButtonVisibility}" Command="{Binding Commands.Pause}">
                        <ui:SymbolIcon Symbol="Pause12" Filled="True" Foreground="White"/>
                    </ui:Button>
                    <ui:Button Visibility="{Binding Controller.StopButtonVisibility}" Command="{Binding Commands.Stop}">
                        <ui:SymbolIcon Symbol="Stop24" Filled="True" Foreground="White"/>
                    </ui:Button>
                </DockPanel>

                <DockPanel Name="RightControls" HorizontalAlignment="Right" Grid.Column="2">
                    <TextBlock Margin="10,0" Foreground="White" FontSize="14" VerticalAlignment="Center" Text="{Binding MediaElement.Position, StringFormat={}{0:hh\\:mm\\:ss}}"/>
                    <ToggleButton Margin="10,0" IsChecked="{Binding Controller.IsLoopingMediaEnabled, Mode=TwoWay}" ToolTip="Enable Looping">
                        <ui:SymbolIcon Symbol="ArrowRepeatAll16" Foreground="White"/>
                    </ToggleButton>
                    
                    <ui:Button Command="{Binding Commands.ToggleFullScreen}">
                        <ui:SymbolIcon Symbol="FullScreenMaximize16" Foreground="White"/>
                    </ui:Button>
                </DockPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
